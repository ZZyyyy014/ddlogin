<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tx.dllogin.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.tx.dllogin.model.Role">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_remark" jdbcType="VARCHAR" property="roleRemark" />
    <result column="sparess_v1" jdbcType="VARCHAR" property="sparessV1" />
    <result column="sparess_v2" jdbcType="VARCHAR" property="sparessV2" />
    <result column="sparess_v3" jdbcType="VARCHAR" property="sparessV3" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_name, role_remark, sparess_v1, sparess_v2, sparess_v3
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dd_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dd_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tx.dllogin.model.Role">
    insert into dd_role (role_id, role_name, role_remark, 
      sparess_v1, sparess_v2, sparess_v3
      )
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleRemark,jdbcType=VARCHAR}, 
      #{sparessV1,jdbcType=VARCHAR}, #{sparessV2,jdbcType=VARCHAR}, #{sparessV3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tx.dllogin.model.Role">
    insert into dd_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleRemark != null">
        role_remark,
      </if>
      <if test="sparessV1 != null">
        sparess_v1,
      </if>
      <if test="sparessV2 != null">
        sparess_v2,
      </if>
      <if test="sparessV3 != null">
        sparess_v3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleRemark != null">
        #{roleRemark,jdbcType=VARCHAR},
      </if>
      <if test="sparessV1 != null">
        #{sparessV1,jdbcType=VARCHAR},
      </if>
      <if test="sparessV2 != null">
        #{sparessV2,jdbcType=VARCHAR},
      </if>
      <if test="sparessV3 != null">
        #{sparessV3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tx.dllogin.model.Role">
    update dd_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleRemark != null">
        role_remark = #{roleRemark,jdbcType=VARCHAR},
      </if>
      <if test="sparessV1 != null">
        sparess_v1 = #{sparessV1,jdbcType=VARCHAR},
      </if>
      <if test="sparessV2 != null">
        sparess_v2 = #{sparessV2,jdbcType=VARCHAR},
      </if>
      <if test="sparessV3 != null">
        sparess_v3 = #{sparessV3,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tx.dllogin.model.Role">
    update dd_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_remark = #{roleRemark,jdbcType=VARCHAR},
      sparess_v1 = #{sparessV1,jdbcType=VARCHAR},
      sparess_v2 = #{sparessV2,jdbcType=VARCHAR},
      sparess_v3 = #{sparessV3,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>

  <resultMap id="FindAllShiro" type="FindReAllShiroVo">
    <result column="duser_name" property="userName" />
    <result column="dip" property="Ip" />
    <result column="dsparessV1" property="sparessV1" />

    <result column="dedept_id" property="depteId" />
    <result column="dedept_name" property="deptName" />

    <result column="dffirm_id" property="firmId"/>
    <result column="dffirm_name" property="firmName"/>

    <result column="drrole_id" property="roleId" />
    <result column="drrole_remark" property="roleRemark" />

  </resultMap>
  <select id="FindAllShiro" resultMap="FindAllShiro">
   select distinct d.user_name  duser_name,
           d.ip    dip,
           d.sparess_v1 dsparessV1,
           de.dept_id    dedept_id,
           de.dept_name  dedept_name,
           df.firm_id    dffirm_id,
           df.firm_name  dffirm_name,
           dr.role_id drrole_id,
           dr.role_remark  drrole_remark
    from dd_user d      LEFT JOIN    dd_dept_user du      on     d.user_id=du.user_id
    LEFT JOIN     dd_dept de        on   du.dept_id=de.dept_id
    LEFT JOIN      dd_firm df          on du.sparess_v1=df.firm_id
    LEFT JOIN     dd_role dr     ON   d.levelss=dr.role_id
      where 1=1
     <if test="userName!=null and userName!='' ">
        and  d.user_name=#{userName}
     </if>

    <if test="sparessV1!=null and sparessV1!='' ">
      and  d.sparess_v1  like concat('%',#{sparessV1},'%')
    </if>

    <if test="firmName!=null and firmName!=''  ">
      and  dr.role_remark=#{firmName}
    </if>
    <if test="deptName!=null and deptName!='' ">
      and  de.dept_name=#{deptName}
    </if>
   order by dr.role_id asc , dffirm_name,dedept_name
  </select>


<select id="findAllrole" resultType="Role">
   select  *
   from dd_role
</select>


<select id="findRoleIdByName" resultType="String">
 select role_id
  from dd_role
where role_remark=#{roleRemark}

</select>





</mapper>